/**
 * A resource factory inspired by $resource from AngularJS
 * @version v0.2.1 - 2013-08-12
 * @link https://github.com/FineLinePrototyping/angularjs-rails-resource.git
 * @author 
 */
!function(){angular.module("rails",["ng"])}(),function(){angular.module("rails").factory("RailsInflector",function(){function a(a){return angular.isString(a)?a.replace(/_[\w\d]/g,function(a,b,c){return 0===b?a:c.charAt(b+1).toUpperCase()}):a}function b(a){return angular.isString(a)?a.replace(/[A-Z]/g,function(a,b){return 0===b?a:"_"+a.toLowerCase()}):a}function c(a){return a+"s"}return{camelize:a,underscore:b,pluralize:c}})}(),function(a){angular.module("rails").factory("RailsResourceInjector",["$injector",function(b){function c(c){return c?angular.isString(c)?b.get(c):c:a}function d(d){return d?b.instantiate(c(d)):a}return{createService:d,getDependency:c}}])}(),function(){angular.module("rails").factory("railsUrlBuilder",["$interpolate",function(a){return function(b){var c;return angular.isFunction(b)?b:(-1===b.indexOf(a.startSymbol())&&(b=b+"/"+a.startSymbol()+"id"+a.endSymbol()),c=a(b),function(a){return b=c(a),"/"===b.charAt(b.length-1)&&(b=b.substr(0,b.length-1)),b})}}])}(),function(a){angular.module("rails").factory("railsSerializer",["$injector","RailsInflector","RailsResourceInjector",function(b,c,d){function e(b,c){function e(){angular.isFunction(b)&&(c=b,b={}),this.exclusions={},this.inclusions={},this.serializeMappings={},this.deserializeMappings={},this.customSerializedAttributes={},this.preservedAttributes={},this.customSerializers={},this.nestedResources={},this.options=angular.extend({},f,b||{}),c&&c.call(this,this)}return e.prototype.exclude=function(){var a=this.exclusions;return angular.forEach(arguments,function(b){a[b]=!1}),this},e.prototype.only=function(){var a=this.inclusions;return this.options.excludeByDefault=!0,angular.forEach(arguments,function(b){a[b]=!0}),this},e.prototype.nestedAttribute=function(){var a=this;return angular.forEach(arguments,function(b){a.rename(b,b+"_attributes")}),this},e.prototype.resource=function(a,b,c){return this.nestedResources[a]=b,c&&this.serializeWith(a,c),this},e.prototype.rename=function(b,c,d){return this.serializeMappings[b]=c,(d||d===a)&&(this.deserializeMappings[c]=b),this},e.prototype.add=function(a,b){return this.customSerializedAttributes[a]=b,this},e.prototype.preserve=function(a){return this.preservedAttributes[a]=!0,this},e.prototype.serializeWith=function(a,b){return this.customSerializers[a]=b,this},e.prototype.isExcludedFromSerialization=function(b){if(this.options.excludeByDefault&&!this.inclusions.hasOwnProperty(b)||this.exclusions.hasOwnProperty(b))return!0;if(this.options.exclusionMatchers){var c=!1;return angular.forEach(this.options.exclusionMatchers,function(d){angular.isString(d)?c=c||0===b.indexOf(d):angular.isFunction(d)?c=c||d.call(a,b):d instanceof RegExp&&(c=c||d.test(b))}),c}return!1},e.prototype.getSerializedAttributeName=function(b){var c=this.serializeMappings[b]||b;return this.isExcludedFromSerialization(b)||this.isExcludedFromSerialization(c)?a:this.underscore(c)},e.prototype.isExcludedFromDeserialization=function(){return!1},e.prototype.getDeserializedAttributeName=function(b){var c=this.camelize(b);return c=this.deserializeMappings[b]||this.deserializeMappings[c]||c,this.isExcludedFromDeserialization(b)||this.isExcludedFromDeserialization(c)?a:c},e.prototype.getNestedResource=function(a){return d.getDependency(this.nestedResources[a])},e.prototype.getAttributeSerializer=function(b){var c=this.getNestedResource(b),e=this.customSerializers[b];return e?d.createService(e):c?c.serializer:a},e.prototype.serializeValue=function(a){var b=a,c=this;if(angular.isArray(a))b=[],angular.forEach(a,function(a){b.push(c.serializeValue(a))});else if(angular.isObject(a)){if(angular.isDate(a))return a;b={},angular.forEach(a,function(a,d){angular.isFunction(a)||c.serializeAttribute(b,d,a)})}return b},e.prototype.serializeAttribute=function(b,c,d){var e=this.getAttributeSerializer(c),f=this.getSerializedAttributeName(c);f!==a&&(b[f]=e?e.serialize(d):this.serializeValue(d))},e.prototype.serialize=function(a){var b=this.serializeValue(a),c=this;return angular.isObject(b)&&angular.forEach(this.customSerializedAttributes,function(d,e){angular.isFunction(d)&&(d=d.call(a,a)),c.serializeAttribute(b,e,d)}),b},e.prototype.deserializeValue=function(a,b){var c=a,d=this;return angular.isArray(a)?(c=[],angular.forEach(a,function(a){c.push(d.deserializeValue(a,b))})):angular.isObject(a)&&(c={},b&&(c=new b),angular.forEach(a,function(a,b){d.deserializeAttribute(c,b,a)})),c},e.prototype.deserializeAttribute=function(b,c,d){var e,f,g=this.getDeserializedAttributeName(c);g!==a&&(e=this.getAttributeSerializer(g),f=this.getNestedResource(g),b[g]=this.preservedAttributes[g]?d:e?e.deserialize(d,f):this.deserializeValue(d,f))},e.prototype.deserialize=function(a,b){return this.deserializeValue(a,b)},e.prototype.pluralize=function(a){return this.options.pluralize?this.options.pluralize(a):a},e.prototype.underscore=function(a){return this.options.underscore?this.options.underscore(a):a},e.prototype.camelize=function(a){return this.options.camelize?this.options.camelize(a):a},e}var f={underscore:c.underscore,camelize:c.camelize,pluralize:c.pluralize,exclusionMatchers:[],excludeByDefault:!1};return e.defaultOptions=f,e}])}(),function(a){angular.module("rails").factory("railsRootWrappingTransformer",function(){return function(a,b){var c={};return c[angular.isArray(a)?b.rootPluralName:b.rootName]=a,c}}),angular.module("rails").factory("railsRootWrappingInterceptor",function(){return function(a){var b=a.resource;return b?a.then(function(a){return a.data&&a.data.hasOwnProperty(b.rootName)?a.data=a.data[b.rootName]:a.data&&a.data.hasOwnProperty(b.rootPluralName)&&(a.data=a.data[b.rootPluralName]),a}):a}}),angular.module("rails").factory("railsResourceFactory",["$http","$q","railsUrlBuilder","railsSerializer","railsRootWrappingTransformer","railsRootWrappingInterceptor","RailsResourceInjector",function(b,c,d,e,f,g,h){function i(c){function i(a,b){return b&&("/"!==b[0]&&(a+="/"),a+=b),a}function j(a){var b=this;if(a){var c=function(a){return{resource:j,context:b,response:a,then:function(a){return this.response=a(this.response,this.resource,this.context),c(this.response)}}},d=j.callInterceptors(c({data:a}),this).response.data;angular.extend(this,d)}}var k=c.requestTransformers,l=c.responseInterceptors,m=c.afterResponseInterceptors;return j.setUrl=function(a){j.url=d(a)},j.setUrl(c.url),j.enableRootWrapping=c.wrapData===a?!0:c.wrapData,j.httpConfig=c.httpConfig||{},j.httpConfig.headers=angular.extend({Accept:"application/json","Content-Type":"application/json"},j.httpConfig.headers||{}),j.requestTransformers=[],j.responseInterceptors=[],j.afterResponseInterceptors=[],j.defaultParams=c.defaultParams,j.serializer=h.createService(c.serializer||e()),j.rootName=j.serializer.underscore(c.name),j.rootPluralName=j.serializer.underscore(c.pluralName||j.serializer.pluralize(c.name)),j.beforeResponse=function(a){a=h.getDependency(a),j.responseInterceptors.push(function(b){return b.then(function(c){return a(c.data,b.resource,b.context),c})})},j.afterResponse=function(a){a=h.getDependency(a),j.afterResponseInterceptors.push(function(b){return b.then(function(c){return a(c,b.resource),c})})},j.beforeRequest=function(a){a=h.getDependency(a),j.requestTransformers.push(function(b,c){return a(b,c)||b})},angular.forEach(l,function(a){j.responseInterceptors.push(h.getDependency(a))}),angular.forEach(m,function(a){j.afterResponseInterceptors.push(h.getDependency(a))}),angular.forEach(k,function(a){j.requestTransformers.push(h.getDependency(a))}),j.transformData=function(a){return a=j.serializer.serialize(a),angular.forEach(j.requestTransformers,function(b){a=b(a,j)}),j.enableRootWrapping&&(a=f(a,j)),a},j.callInterceptors=function(a,b){return a=a.then(function(a){return a.originalData=a.data,a}),j.enableRootWrapping&&(a.resource=j,a=g(a)),a.then(function(a){return a.data=j.serializer.deserialize(a.data,j),a}),angular.forEach(j.responseInterceptors,function(c){a.resource=j,a.context=b,a=c(a)}),a},j.callAfterInterceptors=function(a){return angular.forEach(j.afterResponseInterceptors,function(b){a.resource=j,a=b(a)}),a},j.processResponse=function(a){return a=j.callInterceptors(a).then(function(a){return a.data}),j.callAfterInterceptors(a)},j.getParameters=function(a){var b;return j.defaultParams&&(b=j.defaultParams),angular.isObject(a)&&(b=angular.extend(b||{},a)),b},j.getHttpConfig=function(a){var b=j.getParameters(a);return b?angular.extend({params:b},j.httpConfig):angular.copy(j.httpConfig)},j.$url=j.resourceUrl=function(a,b){return angular.isObject(a)||(a={id:a}),i(j.url(a||{}),b)},j.$get=function(a,c){return j.processResponse(b.get(a,j.getHttpConfig(c)))},j.query=function(a,b){return j.$get(j.resourceUrl(b),a)},j.get=function(a,b){return j.$get(j.resourceUrl(a),b)},j.prototype.$url=function(a){return i(j.resourceUrl(this),a)},j.prototype.processResponse=function(a){return a=j.callInterceptors(a,this),a=a.then(angular.bind(this,function(a){return a.hasOwnProperty("data")&&angular.isObject(a.data)&&angular.extend(this,a.data),this})),j.callAfterInterceptors(a)},angular.forEach(["post","put","patch"],function(a){j["$"+a]=function(c,d){var e;return d=j.transformData(angular.copy(d,{})),e=angular.extend({method:a,url:c,data:d},j.getHttpConfig()),j.processResponse(b(e))},j.prototype["$"+a]=function(c){var d,e;return d=j.transformData(angular.copy(this,{})),e=angular.extend({method:a,url:c,data:d},j.getHttpConfig()),this.processResponse(b(e))}}),j.prototype.create=function(){return this.$post(this.$url(),this)},j.prototype.update=function(){return this.$put(this.$url(),this)},j.prototype.isNew=function(){return null==this.id},j.prototype.save=function(){return this.isNew()?this.create():this.update()},j.$delete=function(a){return j.processResponse(b["delete"](a,j.getHttpConfig()))},j.prototype.$delete=function(a){return this.processResponse(b["delete"](a,j.getHttpConfig()))},j.prototype.remove=j.prototype["delete"]=function(){return this.$delete(this.$url())},j}return i}])}();